import tensorflow as tf
from components.NetworkComponents import compositLayers
from tensorflow.keras import Model

# Discriminator
class myDiscriminator(Model):
    """
    A discriminator class for the GAIN model.

    Args:
        Dim: Dimension of data point.
        drop_rate: drop out rate of the dropout layer in the model.
    """
    def __init__(self,Dim,drop_rate):
        super(myDiscriminator, self).__init__()
        self.body = compositLayers([Dim*12,Dim*6,Dim*3,Dim*2,Dim*3,Dim*6,Dim*12,Dim],drop_rate)

    def call(self,x_hat,hints):
        """
        Discriminator model call for GAIN which is a residual block with a dense sequential body.

        Args: 
            x_hat: Data generated by generator.
            hints: hints matrix for the discriminator. 1 = genuine, 0 = generated, 0.5 = unknown

        Returns:
            Output of the generated by the generator.
        """
        return self.body(tf.concat(axis = 1, values = [x_hat,hints]))