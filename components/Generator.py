import tensorflow as tf
from tensorflow.keras import Model



#Generator

def randomGeneration(input):
    masked_x,masked_sample,mask=tf.split(input,num_or_size_splits=3, axis=1)
    return tf.random.uniform(tf.shape(masked_x),minval=0,maxval=1,dtype=tf.float32)
class myGenerator(Model):
    """
    A generator class for the GAIN model.

    Args:
        Dim: Dimension of data point.
        body: A kera Model that return a matrix of the same shape as data input. 
    """
    def __init__(self,body=randomGeneration):
        super(myGenerator,self).__init__()
        self.body = body

    def call(self,x,mask):
        """
        Generator model call for GAIN which is a residual block with a dense sequential body.

        Args: 
            x: Data input scaled to have range [0,1].
            mask: mask for data. 1 = reveal, 0 = hidden

        Returns:
            Output of the generated by the generator.
        """
        masked_x=mask*x
        masked_sample=(1-mask)*tf.random.uniform(tf.shape(x),minval=0,maxval=1,dtype=tf.float32)
        return self.body(tf.concat(axis = 1, values = [masked_x,masked_sample,mask]))*(1-mask)+masked_x

